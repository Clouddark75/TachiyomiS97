name: Continuous Integration
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string
        
jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
          all_but_latest: true

      - name: Clone repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Get previous release
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft|prerelease"
          view_top: 1

      - name: Get tag name from inputs
        if: github.event.inputs.version != ''
        run: |
          set -x
          echo "VERSION_TAG=${{github.event.inputs.version}}" >> $GITHUB_ENV

      - name: Get tag name from head commit message
        if: startsWith(github.event.head_commit.message, 'Version ')
        run: |
          set -x
          VERSION="${{ github.event.head_commit.message }}"
          echo "VERSION_TAG=v${VERSION:8}" >> $GITHUB_ENV

      - name: Prepare build
        run: |
          set -e
          echo "COMMIT_LOGS<<{delimiter}
          $(git log --no-merges --pretty=tformat:'* %s (@%aN, %(trailers:key=Co-authored-by,separator=%x2C ))' ${{ steps.last_release.outputs.tag_name }}.. |  sed -r  ':a;s/([^\n]*)(<)[^\n]+(>)/\1\n\2\3/;ta;s/\n//g' | sed -r 's/ <>//g' | sed -e 's/, )/)/g' | sed -e 's/ )/)/g' | sed -e 's/Co-authored-by: /@/ig' | sed -e 's/@Jays2Kings, //g')
          {delimiter}" >> $GITHUB_ENV

      - name: Build app
        uses: gradle/gradle-command-action@v2
        with:
          arguments: assembleStandardRelease

      - name: Sign APK
        if: env.VERSION_TAG != ''
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNINGKEYBASE64 }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTOREPASSWORD }}
          keyPassword: ${{ secrets.KEYPASSWORD }}

      - name: Clean up build artifacts
        if: env.VERSION_TAG != ''
        run: |
          set -e
          mv app/build/outputs/apk/standard/release/app-standard-universal-release-unsigned-signed.apk TachiyomiS97-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum TachiyomiS97-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

      - name: Create Release
        if: env.VERSION_TAG != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: TachiyomiS97 ${{ env.VERSION_TAG }}
          body: |
            [Full changelog](https://github.com/saud-97/TachiyomiS97/compare/${{ steps.last_release.outputs.tag_name }}...${{ env.VERSION_TAG }})
            ### Changes
            ${{ env.COMMIT_LOGS }}

            ---

            ### Checksums

            | Variant | SHA-256 |
            | ------- | ------- |
            | Universal | ${{ env.APK_UNIVERSAL_SHA }} |
          files: |
            TachiyomiS97-${{ env.VERSION_TAG }}.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
